% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fastglm_nb.R
\name{fastglm_nb}
\alias{fastglm_nb}
\title{fast generalized linear model fitting for negative binomial model}
\usage{
fastglm_nb(
  x,
  y,
  weights = rep(1, NROW(y)),
  offset = rep(0, NROW(y)),
  start = NULL,
  etastart = NULL,
  mustart = NULL,
  tol = 0.00000001,
  maxit = 25L,
  method = 0L:3L,
  link = "log"
)
}
\arguments{
\item{x}{input model matrix. Must be a matrix object}

\item{y}{numeric response vector of length nobs.}

\item{weights}{an optional vector of 'prior weights' to be used in the fitting process. Should be a numeric vector.}

\item{offset}{this can be used to specify an a priori known component to be included in the linear predictor during fitting.
This should be a numeric vector of length equal to the number of cases}

\item{start}{starting values for the parameters in the linear predictor.}

\item{etastart}{starting values for the linear predictor.}

\item{mustart}{values for the vector of means.}

\item{tol}{threshold tolerance for convergence. Should be a positive real number}

\item{maxit}{maximum number of IRLS iterations. Should be an integer}

\item{method}{an integer scalar with value 0 for the column-pivoted QR decomposition, 1 for the unpivoted QR decomposition,}

\item{link}{specification of which link function to use. Default is log
2 for the LLT Cholesky, or 3 for the LDLT Cholesky}
}
\value{
A list with the elements
\item{coefficients}{a vector of coefficients}
\item{se}{a vector of the standard errors of the coefficient estimates}
\item{rank}{a scalar denoting the computed rank of the model matrix}
\item{df.residual}{a scalar denoting the degrees of freedom in the model}
\item{residuals}{the vector of residuals}
\item{s}{a numeric scalar - the root mean square for residuals}
\item{fitted.values}{the vector of fitted values}
}
\description{
fast generalized linear model fitting for negative binomial model
}
\examples{

g <- factor(rep(letters[1:4], each = 10))
n <- length(g)
x <- model.matrix(~g)
b<- rnorm(4)

mu <- exp(x\%*\%b)
theta <- 3

y <- rnbinom(n = n, size = theta, mu = mu)

model <- fastglm_nb(x, y)

}
